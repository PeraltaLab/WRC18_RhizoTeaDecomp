#Set legend text size
theme(legend.text=element_text(size=14, face="bold"), legend.title = element_text(size=14, face="bold"))+
#Sets size of tick marks on axis
theme(axis.ticks.length=unit(0.3,"cm")) +
#Sets labels for plot title, axis titles, and legend headings
xlab("PCoA 1 (25.0%)") + ylab("PCoA 2 (10.9%)") +
labs(shape = "Soil Source") +
labs(colour="Treatment") +
ggtitle("Fungal ITS2 Taxonomic Composition")+
theme(legend.position="right")+
theme(rect = element_rect(fill = "transparent")) +
theme(plot.background = element_rect(color=NA))
plot1
#Save a copy of the plot
ggsave("../figures/WRC18_Rhizo/pub/ITS2_WRC2018Rhizo.jpg", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
ggsave("../figures/WRC18_Rhizo/pub/ITS2_WRC2018Rhizo.png", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
#Read in OTU file
otu <- read.otu(sharedfile)
#Remove OTUs with less than 2 occurences across all sites
otu.2 <- otu[, which(colSums(otu) > 3)]
#Remove all RP samples
#In the original WRC2015 sampling I collected bulk soils, and rhizospehre soils. Soil loosley adhering to roots was shaken into a bag (RP) for DNA and soil NH4/NO3 extraction. Roots and adhering soils collected for DNA processing (RS). Removed RP from DNA analysis.
#WRC15_65-WRC15_80
rownames(otu.2)
otu.2 <-otu.2[-c(33:48),]
rownames(otu.2)
#FROM OTU - remove blocks 1, 3, 5, 7 and treatments C & F
#First join meta and otu. Filter and then remove extra columns
meta_all <- read.csv(metafile)
#meta_all <- meta_all[-c(33:48),]
otu.2.filter <- cbind(meta_all, otu.2)
otu.2.filter <- otu.2.filter %>%
filter(year==2018) %>%
filter(treatment=="M" | treatment =="MF") %>%
filter(block==2 | block==4 | block==6 | block==8)
rownames(otu.2.filter)<- otu.2.filter$sample
otu.2 <- otu.2.filter[,-c(1:26)]
rownames(otu.2.filter)
#What sample has lowest read count? WRC18_201 16668, next lowest is WRC18_200 43192 highest WRC15_167 68819
otu2<- colSums(t(otu.2))
otu2
otu2[which.min(colSums(t(otu.2)))]
otu2[which.max(colSums(t(otu.2)))]
#Did not remove lowest sample, when ran adonis did not change results
#rownames(otu.2)
#otu.2 <- otu.2[-c(17),]
#graph of read counts, need to work on y axis
c<-as.data.frame(otu.2)
c$colsum <- colSums(t(c))
c$group <- rownames(c)
p<-ggplot(c, aes(x=group,y=colsum))+geom_bar(stat="identity")+coord_flip()
p
#Rarefy
#Set min sample number
min.N <- min(rowSums(otu.2))
#rrarefy returns a randomly rarefied community data frame or vector of selected size
#This is the otu set that should be used for beta diversity metrics
otu.rare <- rrarefy(otu.2, min.N)
#transforms read counts to relative abundance
#Using rarefied OTU dataset
otu.2.rel <- otu.rare
for(i in 1:dim(otu.rare)[1]){
otu.2.rel[i,] <- otu.rare[i,]/sum(otu.rare[i,])
}
#Combine experimental deisng meta data with OTU relative abundance data
metaotu <- cbind(met, otu.2.rel)
#transforms read counts to relative abundance
#Using rarefied OTU dataset
otu.2.rel <- otu.rare
for(i in 1:dim(otu.rare)[1]){
otu.2.rel[i,] <- otu.rare[i,]/sum(otu.rare[i,])
}
#Combine experimental deisng meta data with OTU relative abundance data
metaotu <- cbind(meta, otu.2.rel)
#Where does otu data begin, remove for PERMANOVA
#metaotu[1,20:21]
#PERMANOVA with source and treatment as factors
#Among all treatments source (soil source) and treatment
metaotu.ad <- adonis(metaotu[,-c(1:26)] ~source*treatment, method = "bray", data = metaotu, perm=1000, set.seed=42)
metaotu.ad
otu.2.rel.dist<-vegdist(otu.2.rel, method="bray")
# Principal Coordinates Analysis
otu.2.rel.dist.pcoa <- cmdscale(otu.2.rel.dist, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1a <- round(otu.2.rel.dist.pcoa$eig[1] / sum(otu.2.rel.dist.pcoa$eig), 3) * 100
explainvar2a <- round(otu.2.rel.dist.pcoa$eig[2] / sum(otu.2.rel.dist.pcoa$eig), 3) * 100
sum.eiga <- sum(explainvar1a, explainvar2a)
explainvar1a #29.2
explainvar2a #12.4
rownames(meta)<-meta$sample
all.equal(rownames(meta), rownames(otu.2.rel))
# Set treatments
treat1 <- as.factor(meta$source)
levels(treat1) <- ordered(c("bulk","grass", "forb"))
treat2 <- as.factor(meta$treatment)
#levels(treat2) <- c("M", "MF")
pcoa.groups <- paste(meta$source, meta$treatment, sep = "_")
pcoa.points <- data.frame(otu.2.rel.dist.pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # treatment
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # source
levels(pcoa.col) <- c("Unfertilized","Fertilized")
#Run envfit to see which soil varibales are predicators
#These are just the environmental parameters have values for bulk and rhizospehre soils
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22,24,25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
vec$parm<-rownames(vec)
colnames(vec)
vec$parm<-c("N%", "C:N", "NH4","PO4_H", "PO4_W","OM%")
rownames(meta)<-meta$sample
all.equal(rownames(meta), rownames(otu.2.rel))
# Set treatments
treat1 <- as.factor(meta$source)
levels(treat1) <- ordered(c("bulk","grass", "forb"))
treat2 <- as.factor(meta$treatment)
#levels(treat2) <- c("M", "MF")
pcoa.groups <- paste(meta$source, meta$treatment, sep = "_")
pcoa.points <- data.frame(otu.2.rel.dist.pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # treatment
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # source
levels(pcoa.col) <- c("Unfertilized","Fertilized")
#Run envfit to see which soil varibales are predicators
#These are just the environmental parameters have values for bulk and rhizospehre soils
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22,24,25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
vec$parm<-rownames(vec)
colnames(vec)
vec$parm<-c("N%", "C:N", "NH4","PO4_H", "PO4_W","OM%")
rownames(meta)<-meta$sample
all.equal(rownames(meta), rownames(otu.2.rel))
# Set treatments
treat1 <- as.factor(meta$source)
levels(treat1) <- ordered(c("bulk","grass", "forb"))
treat2 <- as.factor(meta$treatment)
#levels(treat2) <- c("M", "MF")
pcoa.groups <- paste(meta$source, meta$treatment, sep = "_")
pcoa.points <- data.frame(otu.2.rel.dist.pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # treatment
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # source
levels(pcoa.col) <- c("Unfertilized","Fertilized")
#Run envfit to see which soil varibales are predicators
#These are just the environmental parameters have values for bulk and rhizospehre soils
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22,24,25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
vec$parm<-rownames(vec)
colnames(vec)
#vec$parm<-c("N%", "C:N", "NH4","PO4_H", "PO4_W","OM%")
#plot PCoA
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1 <- ggplot(df1a, aes(x=V1, y=V2), group = interaction(pcoa.col, pcoa.shape)) +
theme_bw() +
#group = interaction(pcoa.col, pcoa.shape), colour=pcoa.col2))
geom_point(aes(shape = pcoa.shape, colour = pcoa.col), size=10, stroke = 2) +
#geom_point(aes(colour=pcoa.col2), size =4.0)+
#removes gridlines from plot
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
#Plot soil property vectors from envfit
geom_segment(data=vec, aes(x=0,xend=Dim1,y=0,yend=Dim2), size=1,
arrow = arrow(length = unit(0.2, "cm")),colour="black",inherit.aes=F)+
#Label soil vectors. Using annotate because I can't figure out how to move segment text
#Note when re-run should double check envfit stats to make sure that soil parameters are the same
geom_text(data=vec,aes(x=Dim1,y=Dim2,label=vec$parm),size=5, inherit.aes=F)+
#annotate("text",x=-0.02,y=0.2, label="C%") +
#annotate("text",x=0.02,y=0.2, label="N%") +
#annotate("text",x=0,y=-.2, label="moisture") +
#annotate("text",x=0.1,y=-.225, label="pH") +
#Set error bacrs for geom_point+
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0), colour="black") + geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0), colour="black") +
#Set colors for treatments
#scale_colour_manual(values = c("#999999", "#000000")) +
scale_colour_manual(values = c("gray", "darkgreen","purple","red","yellow","blue","gray","pink","magenta")) +
#Would have liked to set shapes but couldn't get this to work
scale_shape_manual(values = c(16,22,15)) +
#Sets map coordinates
coord_cartesian(xlim = c(-0.3, 0.3), ylim = c(-0.3, 0.3)) +
#Sets axis text and put border around plot
theme(axis.title = element_text(size=24),# face="bold"),
axis.text.x = element_text(size=24, color="black"),  axis.text.y = element_text(size=24, color="black"),
panel.border = element_rect(colour = "black", size=1.25)) +
#Set plot title textsize
theme(plot.title=element_text(size=24)) +
#Set legend text size
theme(legend.text=element_text(size=24, face="bold"), legend.title = element_text(size=24, face="bold"))+
#Sets size of tick marks on axis
theme(axis.ticks.length=unit(0.3,"cm")) +
#Sets labels for plot title, axis titles, and legend headings
xlab("PCoA 1 (29.1%)") + ylab("PCoA 2 (12.4%)") +
labs(shape = "Soil Source") +
labs(colour="Treatment") +
ggtitle("16S rRNA V4 Taxonomic Composition")+
theme(legend.position="righ")+
theme(rect = element_rect(fill = "transparent")) +
theme(plot.background = element_rect(color=NA))
plot1
#Save a copy of the plot
ggsave("../figures/WRC18_Rhizo/16SrRNA_WRC2018Rhizo.png", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
ggsave("../figures/WRC18_Rhizo/16SrRNA_WRC2018Rhizo.pdf", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
#Do fungal and bacterial communities exhibit the same pattern?
pro.1 <- procrustes(otu.2.rel.dist.pcoa,fungal_otu.rel.dist.pcoa, symmetric=TRUE, scores = "sites", choices = c(1, 2))
pro.1
pro.1 <- protest(X = otu.2.rel.dist.pcoa, Y = fungal_otu.rel.dist.pcoa, scores = "sites", permutations = 999)
pro.1
pro.1 <- procrustes(otu.2.rel.dist.pcoa,fungal_otu.rel.dist.pcoa, symmetric=TRUE, scores = "sites", choices = c(1, 2))
pro.1
pro.1 <- protest(X = otu.2.rel.dist.pcoa, Y = fungal_otu.rel.dist.pcoa, scores = "sites", permutations = 999)
pro.1
plot(pro.1, kind=1)
plot(pro.1, kind=2)
plot(pro.1, kind=1, type='text')
pro.1 <- protest(X = fungal_otu.rel.dist.pcoa, Y =otu.2.rel.dist.pcoa , symmetric=TURE, scores = "sites", permutations = 999)
pro.1
plot(pro.1, kind=1, type='text')
#Do fungal and bacterial communities exhibit the same pattern?
pro.1 <- procrustes(otu.2.rel.dist.pcoa,fungal_otu.rel.dist.pcoa, symmetric=TRUE, scores = "sites", choices = c(1, 2))
pro.1
pro.1 <- protest(X = fungal_otu.rel.dist.pcoa, Y =otu.2.rel.dist.pcoa , symmetric=TURE, scores = "sites", permutations = 999)
pro.1
#Sum of squates = 0.43
#Correlation rotation = 0.76
#Signifignce = 0.001
plot(pro.1, kind=1, type='text')
plot(pro.1, kind=2, type='text')
plot(pro.1, kind=1, type='text')
pro.1 <- protest(pro.1 , symmetric=TURE, scores = "sites", permutations = 999)
fungal_otu.rel.dist.pcoa
otu.2.rel.dist.pcoa
pro.1 <- protest(X = fungal_otu.rel.dist.pcoa, Y =otu.2.rel.dist.pcoa , symmetric=TRUE, scores = "sites", permutations = 999)
pro.1
plot(pro.1, kind=1, type='text')
plot(pro.1, kind=2, type='text')
pro.1
fun_otu<- colSums(t(fungal_otu))
fun_otu
fun_otu[which.min(colSums(t(fungal_otu)))]
fun_otu[which.max(colSums(t(fungal_otu)))]
View(meta)
rownames(meta)<-meta$sample
all.equal(rownames(meta), rownames(otu.2.rel))
# Set treatments
treat1 <- as.factor(meta$source)
levels(treat1) <- ordered(c("bulk","grass", "forb"))
treat2 <- as.factor(meta$treatment)
#levels(treat2) <- c("M", "MF")
pcoa.groups <- paste(meta$source, meta$treatment, sep = "_")
pcoa.points <- data.frame(otu.2.rel.dist.pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # treatment
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # source
levels(pcoa.col) <- c("Unfertilized","Fertilized")
#Run envfit to see which soil varibales are predicators
#These are just the environmental parameters have values for bulk and rhizospehre soils
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22:25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
vec$parm<-rownames(vec)
colnames(vec)
#vec$parm<-c("N%", "C:N", "NH4","PO4_H", "PO4_W","OM%")
#plot PCoA
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1 <- ggplot(df1a, aes(x=V1, y=V2), group = interaction(pcoa.col, pcoa.shape)) +
theme_bw() +
#group = interaction(pcoa.col, pcoa.shape), colour=pcoa.col2))
geom_point(aes(shape = pcoa.shape, colour = pcoa.col), size=10, stroke = 2) +
#geom_point(aes(colour=pcoa.col2), size =4.0)+
#removes gridlines from plot
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
#Plot soil property vectors from envfit
geom_segment(data=vec, aes(x=0,xend=Dim1,y=0,yend=Dim2), size=1,
arrow = arrow(length = unit(0.2, "cm")),colour="black",inherit.aes=F)+
#Label soil vectors. Using annotate because I can't figure out how to move segment text
#Note when re-run should double check envfit stats to make sure that soil parameters are the same
geom_text(data=vec,aes(x=Dim1,y=Dim2,label=vec$parm),size=5, inherit.aes=F)+
#annotate("text",x=-0.02,y=0.2, label="C%") +
#annotate("text",x=0.02,y=0.2, label="N%") +
#annotate("text",x=0,y=-.2, label="moisture") +
#annotate("text",x=0.1,y=-.225, label="pH") +
#Set error bacrs for geom_point+
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0), colour="black") + geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0), colour="black") +
#Set colors for treatments
#scale_colour_manual(values = c("#999999", "#000000")) +
scale_colour_manual(values = c("gray", "darkgreen","purple","red","yellow","blue","gray","pink","magenta")) +
#Would have liked to set shapes but couldn't get this to work
scale_shape_manual(values = c(16,22,15)) +
#Sets map coordinates
coord_cartesian(xlim = c(-0.3, 0.3), ylim = c(-0.3, 0.3)) +
#Sets axis text and put border around plot
theme(axis.title = element_text(size=24),# face="bold"),
axis.text.x = element_text(size=24, color="black"),  axis.text.y = element_text(size=24, color="black"),
panel.border = element_rect(colour = "black", size=1.25)) +
#Set plot title textsize
theme(plot.title=element_text(size=24)) +
#Set legend text size
theme(legend.text=element_text(size=24, face="bold"), legend.title = element_text(size=24, face="bold"))+
#Sets size of tick marks on axis
theme(axis.ticks.length=unit(0.3,"cm")) +
#Sets labels for plot title, axis titles, and legend headings
xlab("PCoA 1 (29.1%)") + ylab("PCoA 2 (12.4%)") +
labs(shape = "Soil Source") +
labs(colour="Treatment") +
ggtitle("16S rRNA V4 Taxonomic Composition")+
theme(legend.position="righ")+
theme(rect = element_rect(fill = "transparent")) +
theme(plot.background = element_rect(color=NA))
plot1
#Save a copy of the plot
ggsave("../figures/WRC18_Rhizo/16SrRNA_WRC2018Rhizo.png", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
ggsave("../figures/WRC18_Rhizo/16SrRNA_WRC2018Rhizo.pdf", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
rownames(meta)<-meta$sample
all.equal(rownames(meta), rownames(otu.2.rel))
# Set treatments
treat1 <- as.factor(meta$source)
levels(treat1) <- ordered(c("bulk","grass", "forb"))
treat2 <- as.factor(meta$treatment)
#levels(treat2) <- c("M", "MF")
pcoa.groups <- paste(meta$source, meta$treatment, sep = "_")
pcoa.points <- data.frame(otu.2.rel.dist.pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # treatment
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # source
levels(pcoa.col) <- c("Unfertilized","Fertilized")
#Run envfit to see which soil varibales are predicators
#These are just the environmental parameters have values for bulk and rhizospehre soils
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22:25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
vec$parm<-rownames(vec)
colnames(vec)
vec$parm<-c("N%", "C:N", "NH4","PO4", "PO4","OM%")
colnames(vec)
vec <-  subset(vec, A$pvals<=0.05)
vec
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22:25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22:25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
View(vec)
vec$parm<-c("N%", "C:N", "PO4","OM%")
rownames(meta)<-meta$sample
all.equal(rownames(meta), rownames(otu.2.rel))
# Set treatments
treat1 <- as.factor(meta$source)
levels(treat1) <- ordered(c("bulk","grass", "forb"))
treat2 <- as.factor(meta$treatment)
#levels(treat2) <- c("M", "MF")
pcoa.groups <- paste(meta$source, meta$treatment, sep = "_")
pcoa.points <- data.frame(otu.2.rel.dist.pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # treatment
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # source
levels(pcoa.col) <- c("Unfertilized","Fertilized")
#Run envfit to see which soil varibales are predicators
#These are just the environmental parameters have values for bulk and rhizospehre soils
fit<-envfit(otu.2.rel.dist.pcoa$points, meta[,-c(1:14, 17,22:25)], perm=1000, na.rm=T, set.seed=42)
fit
A <-as.list(fit$vectors)
vec<-as.data.frame(fit$vectors$arrows*sqrt(fit$vectors$r)*0.35)
p<- as.data.frame(A$pvals)
vec <- cbind(vec, p)
vec <-  subset(vec, A$pvals<=0.05)
vec$parm<-rownames(vec)
colnames(vec)
vec$parm<-c("N%", "C:N", "PO4","OM%")
#plot PCoA
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1 <- ggplot(df1a, aes(x=V1, y=V2), group = interaction(pcoa.col, pcoa.shape)) +
theme_bw() +
#group = interaction(pcoa.col, pcoa.shape), colour=pcoa.col2))
geom_point(aes(shape = pcoa.shape, colour = pcoa.col), size=10, stroke = 2) +
#geom_point(aes(colour=pcoa.col2), size =4.0)+
#removes gridlines from plot
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))+
#Plot soil property vectors from envfit
geom_segment(data=vec, aes(x=0,xend=Dim1,y=0,yend=Dim2), size=1,
arrow = arrow(length = unit(0.2, "cm")),colour="black",inherit.aes=F)+
#Label soil vectors. Using annotate because I can't figure out how to move segment text
#Note when re-run should double check envfit stats to make sure that soil parameters are the same
geom_text(data=vec,aes(x=Dim1,y=Dim2,label=vec$parm),size=5, inherit.aes=F)+
#annotate("text",x=-0.02,y=0.2, label="C%") +
#annotate("text",x=0.02,y=0.2, label="N%") +
#annotate("text",x=0,y=-.2, label="moisture") +
#annotate("text",x=0.1,y=-.225, label="pH") +
#Set error bacrs for geom_point+
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0), colour="black") + geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0), colour="black") +
#Set colors for treatments
#scale_colour_manual(values = c("#999999", "#000000")) +
scale_colour_manual(values = c("gray", "darkgreen","purple","red","yellow","blue","gray","pink","magenta")) +
#Would have liked to set shapes but couldn't get this to work
scale_shape_manual(values = c(16,22,15)) +
#Sets map coordinates
coord_cartesian(xlim = c(-0.3, 0.3), ylim = c(-0.3, 0.3)) +
#Sets axis text and put border around plot
theme(axis.title = element_text(size=24),# face="bold"),
axis.text.x = element_text(size=24, color="black"),  axis.text.y = element_text(size=24, color="black"),
panel.border = element_rect(colour = "black", size=1.25)) +
#Set plot title textsize
theme(plot.title=element_text(size=24)) +
#Set legend text size
theme(legend.text=element_text(size=24, face="bold"), legend.title = element_text(size=24, face="bold"))+
#Sets size of tick marks on axis
theme(axis.ticks.length=unit(0.3,"cm")) +
#Sets labels for plot title, axis titles, and legend headings
xlab("PCoA 1 (29.1%)") + ylab("PCoA 2 (12.4%)") +
labs(shape = "Soil Source") +
labs(colour="Treatment") +
ggtitle("16S rRNA V4 Taxonomic Composition")+
theme(legend.position="righ")+
theme(rect = element_rect(fill = "transparent")) +
theme(plot.background = element_rect(color=NA))
plot1
#Save a copy of the plot
ggsave("../figures/WRC18_Rhizo/16SrRNA_WRC2018Rhizo.png", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
ggsave("../figures/WRC18_Rhizo/16SrRNA_WRC2018Rhizo.pdf", plot=plot1, device=NULL, path=NULL, scale=1, width=7.5, height=6, dpi=900, limitsize=TRUE, bg="transparent")
#Do fungal and bacterial communities exhibit the same pattern?
pro.1 <- procrustes(otu.2.rel.dist.pcoa, fungal_otu.rel.dist.pcoa, symmetric=TRUE, scores = "sites", choices = c(1, 2))
pro.1
pro.1 <- protest(X = fungal_otu.rel.dist.pcoa, Y =otu.2.rel.dist.pcoa , symmetric=TRUE, scores = "sites", permutations = 999)
pro.1
#Sum of squates = 0.43
#Correlation rotation = 0.76
#Signifignce = 0.001
#There is a significant correlation between bacterial and fungal communities
plot(pro.1, kind=1, type='text')
plot(pro.1, kind=2, type='text')
install.packages("igraph") # uncomment this line in order to install this package
library(igraph)
